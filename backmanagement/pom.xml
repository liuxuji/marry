<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>com.per</artifactId>
        <groupId>com.per</groupId>
        <version>${project.version}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>backmanagement</artifactId>
    <packaging>war</packaging>
    <name>backmanagement Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <profiles>
        <profile>
            <id>base</id>
            <properties>
                <profileName>base</profileName>
                <enableSign>true</enableSign>
                <!--zookeeper -->
                <zookeeper.url></zookeeper.url>
                <redis.config.localpath>/connection/redis.properties</redis.config.localpath>
                <redis.config.is_by_zookeeper_start>false</redis.config.is_by_zookeeper_start>
                <!-- redis -->
                <redis.maxTotal>120</redis.maxTotal>
                <redis.maxIdle>10</redis.maxIdle>
                <redis.minIdle>1</redis.minIdle>
                <redis.testOnBorrow>true</redis.testOnBorrow>
                <redis.maxWaitMillis>1000</redis.maxWaitMillis>
                <redis.testOnReturn>true</redis.testOnReturn>
                <redis.testWhileIdle>true</redis.testWhileIdle>
                <redis.timeBetweenEvictionRunsMillis>30000</redis.timeBetweenEvictionRunsMillis>
                <redis.minEvictableIdleTimeMillis>30000</redis.minEvictableIdleTimeMillis>
                <redis.socketTimeout>2000</redis.socketTimeout>
                <!-- jdbc -->
                <jdbc.initialSize>2</jdbc.initialSize>
                <jdbc.minIdle>2</jdbc.minIdle>
                <jdbc.maxActive>10</jdbc.maxActive>
                <jdbc.maxWait>60000</jdbc.maxWait>
                <jdbc.timeBetweenEvictionRunsMillis>60000</jdbc.timeBetweenEvictionRunsMillis>
                <jdbc.minEvictableIdleTimeMillis>300000</jdbc.minEvictableIdleTimeMillis>
                <jdbc.poolPreparedStatements>true</jdbc.poolPreparedStatements>
                <jdbc.maxPoolPreparedStatementPerConnectionSize>30
                </jdbc.maxPoolPreparedStatementPerConnectionSize>
            </properties>
        </profile>

        <profile>
            <id>local</id>
            <properties>
                <profileName>local</profileName>
                <enableSign>false</enableSign>
                <!-- redis -->
                <redis.host>127.0.0.1@</redis.host>
                <redis.port>6379@</redis.port>
                <redis.name></redis.name>
                <redis.password></redis.password>
                <redis.session.host>127.0.0.1@</redis.session.host>
                <redis.session.port>6379@</redis.session.port>
                <redis.session.password></redis.session.password>
            </properties>
        </profile>
        <profile>
            <id>aliself</id>
            <properties>
                <profileName>aliself</profileName>
                <enableSign>false</enableSign>
                <!-- redis-->
                <redis.host>r-2ze2e9393cda3bb4.redis.rds.aliyuncs.com@</redis.host>
                <redis.port>6379@</redis.port>
                <redis.name></redis.name>
                <redis.password>XXB19890501lxj</redis.password>
                <redis.session.host>r-2ze2e9393cda3bb4.redis.rds.aliyuncs.com@</redis.session.host>
                <redis.session.port>6379@</redis.session.port>
                <redis.session.password>XXB19890501lxj</redis.session.password>
                <!-- mysql -->
                <jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
                <jdbc.url>jdbc:mysql://rm-wz94yc300a330sam5o.mysql.rds.aliyuncs.com:3306/marry?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8</jdbc.url>
                <jdbc.username>root</jdbc.username>
                <jdbc.password>WwwXiaoBoWriteMarryPro**</jdbc.password>
                <show_sql>true</show_sql>
                <enable.smscode.test>true</enable.smscode.test>
                <!-- oss-->
                <oss_config.remote_endpoint>oss-cn-beijing.aliyuncs.com</oss_config.remote_endpoint>
                <oss_config.local_endpoint>oss-cn-beijing-internal.aliyuncs.com</oss_config.local_endpoint>
                <oss_config.accessKeyId>LTAIK2hRIQcKMXKK</oss_config.accessKeyId>
                <oss_config.accessKeySecret>7y9MufvKxd3zsrFyTKZDzFKYr18xZj</oss_config.accessKeySecret>
                <oss_config.bucketName>xxb-1989</oss_config.bucketName>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.per</groupId>
            <artifactId>service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.per</groupId>
            <artifactId>core</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${javax.servlet.jsp-api.version}</version>
        </dependency>
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <!-- 这里需要加上scope,在tomcat/common/lib下有Servlet.jar，这里又引入了一个，在Tomcat启动时，先将
         lib包下的jar导入内存，这里要起冲突，报：javax.servlet-api-3.0.1.jar) - jar not loaded错误；添加
         scope解决-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>${spring-data-redis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session</artifactId>
            <version>${spring-session.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>backmanagement</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory> <!--指定哪个目录下的文件通过${key}会被替换为属性值} -->
                <includes>
                    <include>**/*</include>               <!--指定那个目录下哪个文件 -->
                </includes>
                <excludes>
                    <exclude></exclude>                   <!-- 指定不希望被替换占位符的文件-->
                </excludes>
                <filtering>true</filtering>               <!-- 是否过滤前面指定文件中的占位符,并用属性值代替 -->
            </resource>
        </resources>
    </build>

</project>